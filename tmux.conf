# Use to get consistent colors
set -g default-terminal screen-256color
# set-option -ga terminal-overrides ",xterm-256color-italic:Tc"
set-option -ga terminal-overrides ",xterm-256color:Tc"

setw -g mode-keys vi

set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"


# --- Experimental -------------------------------------------------------------
# Allows for faster key repetition
set -s escape-time 0


# --- General ------------------------------------------------------------------
set -g base-index 1
set -g pane-base-index 1
set -g mouse on

# Automatically re-number windows
set -g renumber-windows on
set -g history-limit 10000
setw -g aggressive-resize on

# Turn on focus-events so they pass through to vim
set -g focus-events on


# === Key Bindings =============================================================
# --- Prefixless ---------------------------------------------------------------
# Pane resizing
bind -n S-Up resize-pane -U
bind -n S-Down resize-pane -D
bind -n S-Left resize-pane -L
bind -n S-Right resize-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"



# --- Prefix bindings ----------------------------------------------------------
unbind C-b
set -g prefix C-s

bind C-s send-prefix

bind b break-pane -d

# Navigate a pane to target directory, <prefix>B to open a new session for dir.
bind B send-keys 'tat && exit' 'C-m'

bind c new-window -c '#{pane_current_path}'

bind f command-prompt -p "Join pane from (eg: 2.3 for w2p3):" "join-pane -s '%%'"

# Quickly view system & process info in htop
# bind h split-window -h "htop"
# bind h select-layout main-horizontal \; resize-pane -t 1 -y 20

# set to main-horizontal, 66% height for main pane
bind h run-shell "~/.dotfiles/tmux/resize-adaptable.sh -l main-horizontal -p 62"

bind H select-layout even-vertical

# Quickly edit a file in my notes
# bind j split-window -h -c ~/Dropbox/Notes "reattach-to-user-namespace $EDITOR +FZF"

# split below
bind j split-window -v -c '#{pane_current_path}'

# Kill session, but stay in Tmux if there are other sessions.
bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

bind K confirm-before -p "Kill-pane #P? (y/n)" kill-pane

# split above
bind k split-window -bv -c '#{pane_current_path}'

# bind m select-layout main-horizontal \; resize-pane -t 1 -y 20

bind N command-prompt -p "new session:" "new -s '%%'"

bind r source-file ~/.tmux.conf \; display-message " ~/.tmux.conf reloaded"

bind s choose-tree
# bind t command-prompt -p "Join pane to (eg: 2.3 for w2p3):" "join-pane -t '%%'"

bind T select-layout tiled

# bind v select-layout even-horizontal \; resize-pane -t 1 -x 90
# bind v run-shell "~/.dotfiles/tmux/resize-adaptable.sh -l main-vertical -p 62"
bind v select-layout even-horizontal \; resize-pane -t 2 -x 106 # 1/3 of wide Sohohouse monitor
bind V select-layout even-horizontal

bind y setw synchronize-panes


# More intuitive keybindings for splitting and keeping current path
bind - split-window -v -c '#{pane_current_path}'
bind \ split-window -h -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'

# This never works (-n == no prefix needed)
bind -n M-s display-message "Meta-s received!"

# Setup 'v' to begin selection and 'y' to yank as in Vim
bind -T copy-mode-vi 'v' send -X begin-selection
# bind -T copy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi 'H' send -X start-of-line
bind -T copy-mode-vi 'L' send -X end-of-line

# Update default binding of `Enter` to also use copy-pipe
# unbind -T copy-mode-vi Enter
# bind -T copy-mode-vi send -X Enter copy-pipe "reattach-to-user-namespace pbcopy"


# --- Borders -----------------------------------------------------------------
# Can be a comma-separated list of ‘bg=colour’, ‘fg=colour’, and a list of
# attributes as specified below.

# The colour is one of: black, red, green, yellow, blue, magenta, cyan, white,
# aixterm bright variants (if supported: brightred, brightgreen, and so on),
# colour0 to colour255 from the 256-colour set, default, or a hexadecimal RGB
# string such as ‘#ffffff’, which chooses the closest match from the default
# 256-colour set.

# The attributes is either none or a comma-delimited list of one or more of:
# bright (or bold), dim, underscore, blink, reverse, hidden, italics, or
# strikethrough to turn an attribute on, or an attribute prefixed with ‘no’ to
# turn one off.

set -g pane-border-status top
set -g pane-border-format '[ #P #{pane_title} ]'
# set -g pane-border-format ' #P #{pane_current_command} '


# --- Status Bar Format --------------------------------------------------------
set -g status-justify left
set -g status-left-length 40

setw -g status-left ""
setw -g window-status-current-format " #{?window_zoomed_flag,♦ ,  }#{window_index} #{window_name}#{?window_zoomed_flag, ♦,  } "
setw -g window-status-format "#{?window_last_flag,[, }#{?window_zoomed_flag,♦ ,  }#{window_index} #{window_name}#{?window_zoomed_flag, ♦,  }#{?window_last_flag,], }"
setw -g status-right "#{?client_prefix,[ prefix ],}  #{session_name}  "


# # ------------------------------------------------------------------------------
# #     Colors - Solarized Dark
# # ------------------------------------------------------------------------------

# # --- Highlight Current Pane ---------------------------------------------------
# set -g window-active-style bg=colour8
# set -g window-style bg=colour8

# # --- Borders -----------------------------------------------------------------
# set -g pane-border-fg colour10
# set -g pane-border-bg colour8
# set -g pane-active-border-fg colour10
# set -g pane-active-border-bg colour8

# # --- Status Bar colors (term-based) -------------------------------------------
# set -g status-fg colour12
# set -g status-bg colour0

# # Current window
# setw -g window-status-current-fg colour15
# setw -g window-status-current-bg colour2

# setw -g status-right-fg colour12
# setw -g status-right-bg colour0

# set -g message-fg colour0
# set -g message-bg colour9


# # ------------------------------------------------------------------------------
# #     Colors - Solarized Light
# # ------------------------------------------------------------------------------

# # --- Highlight Current Pane ---------------------------------------------------
# set -g window-active-style bg=colour15
# set -g window-style bg=colour7

# # --- Borders -----------------------------------------------------------------
# set -g pane-border-fg colour15
# set -g pane-border-bg colour15
# set -g pane-active-border-fg colour15
# set -g pane-active-border-bg colour15

# # --- Status Bar colors (term-based) -------------------------------------------
# set -g status-fg colour12
# set -g status-bg colour7

# # Current window
# setw -g window-status-current-fg colour15
# setw -g window-status-current-bg colour2

# setw -g status-left-fg colour7
# setw -g status-left-bg colour4

# setw -g status-right-fg colour15
# setw -g status-right-bg colour12

# set -g message-fg colour9
# set -g message-bg colour7


# ------------------------------------------------------------------------------
#     Colors - OneDark
# ------------------------------------------------------------------------------

# --- Highlight Current Pane ---------------------------------------------------
# set -g window-style bg=colour0
# set -g window-active-style bg=colour233

# # --- Border colors ------------------------------------------------------------
# set -g pane-active-border-style fg=colour8,bg=colour0,none
# set -g pane-border-style fg=colour8,bg=colour0,none

# # --- Status Bar colors (term-based) -------------------------------------------
# set -g status-fg colour8
# set -g status-bg colour0

# # Current window
# setw -g window-status-current-fg colour245
# setw -g window-status-current-bg colour238

# setw -g status-left-fg colour245
# setw -g status-left-bg colour238

# setw -g status-right-fg colour245
# setw -g status-right-bg colour238

# set -g message-fg colour1
# set -g message-bg colour0


# ------------------------------------------------------------------------------
#     Colors - Nord
# ------------------------------------------------------------------------------

# --- Border colors ------------------------------------------------------------
# Colors named per iTerm prefs
BACKGROUND_COLOR='#2e3340'
FOREGROUND_COLOR='#7382a1'

set -g pane-active-border-style fg=$FOREGROUND_COLOR,bg=$BACKGROUND_COLOR,none
set -g pane-border-style fg=$FOREGROUND_COLOR,bg=$BACKGROUND_COLOR,none

# --- Status Bar colors (term-based) -------------------------------------------
set -g status-fg $FOREGROUND_COLOR
set -g status-bg colour0

# Current window
setw -g window-status-current-fg colour0
setw -g window-status-current-bg colour4

setw -g status-left-fg colour0
setw -g status-left-bg colour4

setw -g status-right-fg colour0
setw -g status-right-bg colour4

set -g message-fg colour4
set -g message-bg colour0


# ------------------------------------------------------------------------------
#   Reference
# ------------------------------------------------------------------------------
# Window Flags
# '#'  window activity flag
# '!'  window bell flag
# '~'  window silence flag
# '*'  current window flag
# '-'  last window flag
# 'Z'  window zoomed flag
# ' ' (a space):  no flags at all.
