# Use to get consistent colors
set -g default-terminal screen-256color

setw -g mode-keys vi


# --- Experimental -------------------------------------------------------------
# Allows for faster key repetition
set -s escape-time 0


# --- General ------------------------------------------------------------------
set -g base-index 1
set -g mouse on

# Automatically re-number windows
set -g renumber-windows on
set -g history-limit 10000
setw -g aggressive-resize on

# Turn on focus-events so they pass through to vim
set -g focus-events on


# === Key Bindings =============================================================
# --- Prefixless ---------------------------------------------------------------
# Pane resizing
bind -n S-Up resize-pane -U
bind -n S-Down resize-pane -D
bind -n S-Left resize-pane -L
bind -n S-Right resize-pane -R

# Smart pane switching with awareness of vim splits - from Thoughtbot
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"


# --- Prefix bindings ----------------------------------------------------------
unbind C-b
set -g prefix C-s

bind C-s send-prefix

bind b break-pane -d

# Navigate a pane to target directory, <prefix>B to open a new session for dir.
bind B send-keys 'tat && exit' 'C-m'

bind c new-window -c '#{pane_current_path}'

bind f command-prompt -p "Join pane from (eg: 2.3 for w2p3):" "join-pane -s '%%'"

# Quickly view system & process info in htop
bind h split-window -h "htop"
bind H select-layout even-horizontal

# Quickly edit a file in my notes
bind j split-window -h -c ~/Dropbox/Notes "reattach-to-user-namespace $EDITOR +CtrlP"

# Kill session, but stay in Tmux if there are other sessions.
bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

bind k confirm-before -p "Kill-pane #P? (y/n)" kill-pane

# set to main-horizontal, 60% height for main pane
# bind m set-window-option main-pane-height 50\; select-layout main-horizontal
bind m split-window -h -c ~/Dropbox/Notes "reattach-to-user-namespace $EDITOR -S ~/.vim/sessions/meta"
bind M set-window-option main-pane-height 50\; select-layout main-horizontal

bind N command-prompt -p "new session:" "new -s '%%'"

bind r source-file ~/.tmux.conf \; display-message " ~/.tmux.conf reloaded"
bind s choose-tree
bind t command-prompt -p "Join pane to (eg: 2.3 for w2p3):" "join-pane -t '%%'"

bind T select-layout tiled

bind v split-window -b "$EDITOR ~/Dropbox/Notes/vzaar/vzaar.md"
bind V select-layout even-vertical

bind y setw synchronize-panes


# More intuitive keybindings for splitting and keeping current path
bind - split-window -v -c '#{pane_current_path}'
bind \ split-window -h -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'

# This never works (-n == no prefix needed)
bind -n M-s display-message "Meta-s received!"

# Setup 'v' to begin selection and 'y' to yank as in Vim
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


# --- Highlight Current Pane ---------------------------------------------------
set -g window-active-style 'bg=colour234'
set -g window-style 'bg=colour233'


# --- Borderes -----------------------------------------------------------------
set -g pane-border-bg colour235
set -g pane-active-border-bg colour235
set -g pane-border-fg colour235
set -g pane-active-border-fg colour235


# --- Status Bar Format --------------------------------------------------------
set -g status-justify left
set -g status-left-length 40

setw -g status-left ""
setw -g window-status-current-format " #{?window_zoomed_flag,♦ ,  }#W#{?window_zoomed_flag, ♦,  } "
setw -g window-status-format "#{?window_last_flag,[, }#{?window_zoomed_flag,♦ ,  }#W#{?window_zoomed_flag, ♦,  }#{?window_last_flag,], }"
setw -g status-right "#{?client_prefix,[ prefix ],}  #S  "


# --- Status Bar colors (term-based) -------------------------------------------
set -g status-fg colour8
set -g status-bg colour0

# Current window
setw -g window-status-current-fg colour7
setw -g window-status-current-bg colour8

setw -g status-left-fg colour245
setw -g status-left-bg colour238

set -g message-fg colour8
set -g message-bg colour7

setw -g status-right-fg colour245
setw -g status-right-bg colour238


# ------------------------------------------------------------------------------
#   Reference
# ------------------------------------------------------------------------------
# Window Flags
# '#'  window activity flag
# '!'  window bell flag
# '~'  window silence flag
# '*'  current window flag
# '-'  last window flag
# 'Z'  window zoomed flag
# ' ' (a space):  no flags at all.
