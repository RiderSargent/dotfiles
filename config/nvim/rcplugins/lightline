" vim:ft=vim

Plug 'itchyny/lightline.vim'

" let g:rws_lightline_colorscheme = '16color'
" let g:rws_lightline_colorscheme = 'Dracula'
" let g:rws_lightline_colorscheme = 'PaperColor'
" let g:rws_lightline_colorscheme = 'PaperColor_dark'
" let g:rws_lightline_colorscheme = 'PaperColor_light'
" let g:rws_lightline_colorscheme = 'Tomorrow'
" let g:rws_lightline_colorscheme = 'Tomorrow_Night'
" let g:rws_lightline_colorscheme = 'Tomorrow_Night_Blue'
" let g:rws_lightline_colorscheme = 'Tomorrow_Night_Bright'
" let g:rws_lightline_colorscheme = 'Tomorrow_Night_Eighties'
" let g:rws_lightline_colorscheme = 'darcula'
" let g:rws_lightline_colorscheme = 'default'
" let g:rws_lightline_colorscheme = 'jellybeans'
" let g:rws_lightline_colorscheme = 'landscape'
" let g:rws_lightline_colorscheme = 'molokai'
" let g:rws_lightline_colorscheme = 'one'
" let g:rws_lightline_colorscheme = 'powerline'
" let g:rws_lightline_colorscheme = 'seoul256'
let g:rws_lightline_colorscheme = 'solarized'
" let g:rws_lightline_colorscheme = 'wombat'


" Config
let g:lightline = {
      \ 'colorscheme': rws_lightline_colorscheme,
      \ 'active': {
      \   'left':  [ [ 'mode', 'paste' ],
      \              [ 'fugitive', 'filename' ] ],
      \   'right': [ [ 'lineinfo' ], [ 'percent' ], [ 'filetype' ] ]
      \ },
      \ 'component_function': {
      \   'filename': 'LightLineFilename',
      \ },
      \ }

function! LightLineFugitive()
  return exists('*fugitive#head') ? fugitive#head() : ''
endfunction

function! LightLineReadonly()
  if &filetype == "help"
    return ""
  elseif &readonly
    return "RO"
  else
    return ""
  endif
endfunction

function! LightLineFilename()
  return ('' != LightLineReadonly() ? LightLineReadonly() . ' ' : '') .
       \ ('' != expand('%') ? expand('%') : '[No Name]') .
       \ ('' != LightLineModified() ? ' ' . LightLineModified() : '')
endfunction

function! LightLineModified()
  if &filetype == "help"
    return ""
  elseif &modified
    return "+"
  elseif &modifiable
    return ""
  else
    return ""
  endif
endfunction
